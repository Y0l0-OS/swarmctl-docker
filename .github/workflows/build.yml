# This is a basic workflow to help you get started with Actions

name: Docker Builds

# Controls when the workflow will run
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */666 * * *'
  push:
    branches:
      - 'master'
      - 'dev'
      - 'experimental'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'dev'

permissions: 
  contents: read
  packages: write
jobs: 
  build-worker:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v3
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

#      - name: Available platforms
#        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Login to Docker Hub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Docker meta for Worker
        id: meta_worker
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/y0o0-os/swarmctl
#            y0o0-os/swarmctl

          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          
      - name: Build and push Worker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/arm/v7
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/y0o0-os/swarmctl
#          tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}
#      - name: Docker Hub Description
#        if: github.event_name != 'pull_request'
#        uses: peter-evans/dockerhub-description@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          repository: y0o0-os/swarmctl
#          readme-filepath: ./README.md
#          short-description: "Worker image for ClusterPlex"

  build-tasknuke:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v3
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

#      - name: Available platforms
#        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Login to Docker Hub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Docker meta for Worker
        id: meta_worker
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/y0o0-os/tasknuke
#            y0o0-os/tasknuke

          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          
      - name: Build and push Worker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/arm/v7
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/y0o0-os/tasknuke
#          tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}
#      - name: Docker Hub Description
#        if: github.event_name != 'pull_request'
#        uses: peter-evans/dockerhub-description@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          repository: y0o0-os/tasknuke
#          readme-filepath: ./README.md
#          short-description: "Worker image for ClusterPlex"
